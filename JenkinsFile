pipeline {
  agent {
    docker {
      image 'd2bdocker/jenkins-agent-docker-maven-java:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
}
  
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/dhiv20/maven-sonar-jenkins-argocd-proj2.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.49.1:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }




    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "d2bdocker/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker") {
                dockerImage.push()
            }
        }
      }
    }



    stage('Checkout K8S manifest SCM') {
            steps {
                git credentialsId: 'github',
                    url: 'https://github.com/dhiv20/maven-sonar-jenkins-argocd-proj2-deployments.git',
                    branch: 'master'
            }
        }

      stage('Update K8S manifest & push to Repo') {
            steps {
                script {
                    withCredentials([gitUsernamePassword(credentialsId: 'github')]) {
                        sh '''
                        cat deployment.yml
                        EXISTING_TAG=$(grep 'image: d2bdocker/ultimate-cicd:' deployment.yml | awk -F ':' '{print $3}')
                        sed -i "s|image: d2bdocker/ultimate-cicd:${EXISTING_TAG}|image: d2bdocker/ultimate-cicd:${BUILD_NUMBER}|g" deployment.yml
                        cat deployment.yml
                        git config --global user.email "divy.bhatnagar@outlook.com"
                        git config --global user.name "Divye-Automatic"
                        git config --global --add safe.directory /var/lib/jenkins/workspace/ultimate-cicd
                        git add deployment.yml
                        git commit -m "Updated the deploy yaml | Jenkins Pipeline"
                        git remote -v
                        git push 'https://github.com/dhiv20/maven-sonar-jenkins-argocd-proj2-deployments.git' HEAD:master
                        '''
            }
        }
    }
  }
}
}
